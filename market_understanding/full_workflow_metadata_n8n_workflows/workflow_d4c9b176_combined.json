{
  "url": "https://www.thevibemarketer.com/members/workflow-id/d4c9b176",
  "workflow_id": "d4c9b176",
  "workflow_id_display": "d4c9b176",
  "workflow_name": "Generate & Publish Image Carousels for Social Media with OpenAI DALL-E for TikTok & Instagram",
  "category": "Marketing & Sales",
  "difficulty": "üéØ Advanced",
  "total_nodes": "28",
  "tools_integrations": "Instagram, OpenAI",
  "tags": [],
  "author_name": "Juan Carlos Cavero Gracia",
  "author_profile_url": null,
  "primary_use_case": "üéØ AI Process Automation",
  "setup_time": "‚è±Ô∏è 30 mins - 1 hr",
  "use_cases": [],
  "what_it_does": "This workflow provides on-demand AI processing capabilities. Trigger it manually to process data through AI models, generate content, analyze information, or get intelligent insights. It's perfect for tasks that require human initiation but benefit from AI-powered automation.",
  "key_benefits": [
    "AI automation",
    "Integration with manualTrigger, httpRequest, openAi"
  ],
  "nodes": [
    {
      "name": "When clicking ‚ÄòTest workflow‚Äô",
      "type": "Trigger"
    },
    {
      "name": "Set All Prompts",
      "type": "Data Processing"
    },
    {
      "name": "Set API Variables",
      "type": "Data Processing"
    },
    {
      "name": "Generate Description for Tiktok and Instagram",
      "type": "Process"
    },
    {
      "name": "Send as 1 merged file",
      "type": "Data Processing"
    },
    {
      "name": "POST TO INSTAGRAM",
      "type": "Data Input"
    },
    {
      "name": "Merge",
      "type": "Data Processing"
    },
    {
      "name": "OpenAI - Generate Image 1",
      "type": "Data Input"
    },
    {
      "name": "Separate Image Outputs 1",
      "type": "Data Processing"
    },
    {
      "name": "Convert to File 1",
      "type": "Data Output"
    },
    {
      "name": "Change name to photo1",
      "type": "Data Processing"
    },
    {
      "name": "OpenAI - Generate Image 2",
      "type": "Data Input"
    },
    {
      "name": "Separate Image Outputs 2",
      "type": "Data Processing"
    },
    {
      "name": "Convert to File 2",
      "type": "Data Output"
    },
    {
      "name": "Change name to photo2",
      "type": "Data Processing"
    },
    {
      "name": "OpenAI - Generate Image 3",
      "type": "Data Input"
    },
    {
      "name": "Separate Image Outputs 3",
      "type": "Data Processing"
    },
    {
      "name": "Convert to File 3",
      "type": "Data Output"
    },
    {
      "name": "Change name to photo3",
      "type": "Data Processing"
    },
    {
      "name": "OpenAI - Generate Image 4",
      "type": "Data Input"
    },
    {
      "name": "Separate Image Outputs 4",
      "type": "Data Processing"
    },
    {
      "name": "Convert to File 4",
      "type": "Data Output"
    },
    {
      "name": "Change name to photo4",
      "type": "Data Processing"
    },
    {
      "name": "OpenAI - Generate Image 5",
      "type": "Data Input"
    },
    {
      "name": "Separate Image Outputs 5",
      "type": "Data Processing"
    },
    {
      "name": "Convert to File 5",
      "type": "Data Output"
    },
    {
      "name": "Change name to photo5",
      "type": "Data Processing"
    },
    {
      "name": "POST TO TIKTOK",
      "type": "Data Input"
    }
  ],
  "api_connections": [
    "Set API Variables",
    "OpenAI API"
  ],
  "rating": null,
  "review_count": 0,
  "page_title": "The Vibe Marketer - 10x Your Speed To Market With AI",
  "n8n_workflow": {
    "id": "LV0b7vUbu5mYPRSc",
    "meta": {
      "instanceId": "3378b0d68c3b7ebfc71b79896d94e1a044dec38e99a1160aed4e9c323910fbe2"
    },
    "name": "Generate Tiktok/instagram carousels with gpt-image-1 and autopublish",
    "tags": [],
    "nodes": [
      {
        "id": "7bd93882-7331-471b-a49b-5069c7baccc4",
        "name": "Send as 1 merged file",
        "type": "n8n-nodes-base.code",
        "position": [
          1820,
          2640
        ],
        "parameters": {
          "jsCode": "// Merge all incoming items (each with one binary photoX) into one item\nconst mergedItem = {\n  json: {},\n  binary: {}\n};\n\nfor (const item of items) {\n  // Copy every binary field from each item into mergedItem.binary\n  for (const [key, bin] of Object.entries(item.binary || {})) {\n    mergedItem.binary[key] = bin;\n  }\n}\n\n// Return a single-item array\nreturn [mergedItem];\n"
        },
        "typeVersion": 2
      },
      {
        "id": "358a183f-6e20-4e5e-8151-0ded2cb500b6",
        "name": "POST TO INSTAGRAM",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          2200,
          2540
        ],
        "parameters": {
          "url": "https://api.upload-post.com/api/upload_photos",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "title",
                "value": "={{ $('Generate Description for Tiktok and Instagram').first().json.message.content }}"
              },
              {
                "name": "user",
                "value": "upload_post"
              },
              {
                "name": "platform[]",
                "value": "instagram"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "=photo1"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "=photo2"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo3"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo4"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo5"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Authorization",
                "value": "Apikey add_api_key_here"
              }
            ]
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "000fcfb5-5076-4953-af28-4c4c3df3e7e3",
        "name": "Merge",
        "type": "n8n-nodes-base.merge",
        "position": [
          1640,
          2600
        ],
        "parameters": {
          "numberInputs": 6
        },
        "typeVersion": 3
      },
      {
        "id": "1a17671c-1b5c-4806-8b42-c39817da0ec8",
        "name": "When clicking ‚ÄòTest workflow‚Äô",
        "type": "n8n-nodes-base.manualTrigger",
        "position": [
          -440,
          2760
        ],
        "parameters": {},
        "typeVersion": 1
      },
      {
        "id": "43cf1963-d928-49b3-b2f8-c5a3bd76d231",
        "name": "Generate Description for Tiktok and Instagram",
        "type": "@n8n/n8n-nodes-langchain.openAi",
        "position": [
          0,
          2760
        ],
        "parameters": {
          "modelId": {
            "__rl": true,
            "mode": "list",
            "value": "gpt-4.1",
            "cachedResultName": "GPT-4.1"
          },
          "options": {},
          "messages": {
            "values": [
              {
                "role": "system",
                "content": "Eres un asistente experto en crear buenos t√≠tulos para subir v√≠deos a las redes sociales."
              },
              {
                "content": "=Voy a subir un reel a las redes sociales que ser√°n una serie de imagenes en modo carrousel contando una historia. \n\n¬øPuedes crear una descripcion para la publicaci√≥n de Instagram y tiktok basado en estos prompts que generan las imagenes que cuentan la historia?\n\nAudio:{{ $json.prompt1 }} {{ $json.prompt2 }} {{ $json.prompt3 }} {{ $json.prompt4 }} {{ $json.prompt5 }}\n\nIMPORTANTE: Responde solo con la descripci√≥n, ‚â§‚ÄØ90‚ÄØcaracteres, no a√±adas nada m√°s, y te dar√© una propina de $100."
              }
            ]
          }
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "retryOnFail": true,
        "typeVersion": 1.4,
        "waitBetweenTries": 5000
      },
      {
        "id": "544f9cd9-bad6-4ef1-80a5-0dee52f91029",
        "name": "Set All Prompts",
        "type": "n8n-nodes-base.set",
        "position": [
          -180,
          2760
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "b70f1cfd-d12e-469d-864d-0034860cd00e",
                "name": "prompt1",
                "type": "string",
                "value": "Para la diapositiva 1 de un carrusel vertical TikTok (9:16) que satiriza un experimento social de humanos dependientes de IA: Hombre joven de 25-30 a√±os con look urbano casual (camiseta b√°sica y vaqueros), tel√©fono m√≥vil pegado al pecho con cinta transparente grabando en modo frontal. Expresi√≥n de confianza casi arrogante mientras camina. Fondo urbano moderno y difuminado, fotograf√≠a hiperrealista con iluminaci√≥n dorada de atardecer y profundidad de campo cinematogr√°fica."
              },
              {
                "id": "4d7f371c-e8f9-4941-a322-153607d01938",
                "name": "prompt2",
                "type": "string",
                "value": "Para la diapositiva 2 del mismo carrusel (9:16), mostrando lo absurdo de la dependencia: Mismo hombre, plano medio inclinado, intentando agacharse para atarse los cordones de sus zapatillas con gesto de confusi√≥n exagerada. Los cordones totalmente desatados, tel√©fono grabando fijo en su pecho. Entorno: acera con grafitis coloridos, luz natural suave y tonos c√°lidos, detalle de arrugas sutiles en la ropa, est√©tica street-photography."
              },
              {
                "id": "55f99acf-7f3c-4c8d-b674-2b90c0760893",
                "name": "prompt3",
                "type": "string",
                "value": "Para la diapositiva 3 del carrusel (9:16), cuando la IA interviene en vivo: Primer√≠simo plano POV de la pantalla del m√≥vil mostrando la interfaz de ChatGPT en directo y la pregunta ‚Äú¬øC√≥mo me ato los cordones?‚Äù. Reflejo tenue del rostro del usuario en el cristal, bordes del m√≥vil n√≠tidos, resto fuera de foco. Iluminaci√≥n fr√≠a azulada de la pantalla iluminando la cinta adhesiva, estilo fotogr√°fico realista sin logotipos reconocibles."
              },
              {
                "id": "4b14808a-d512-4b47-9008-573e092996e4",
                "name": "prompt4",
                "type": "string",
                "value": "Para la diapositiva 4 del carrusel (9:16), detalle de la ‚Äúsoluci√≥n‚Äù digital: Pantalla del m√≥vil con instrucciones paso a paso representadas con emojis (üëü‚û°Ô∏èüîÑ‚û°Ô∏èüéÄ) en una burbuja de chat alargada y semitransparente. Luz azulada de la pantalla iluminando el pecho del hombre, √©l muestra expresi√≥n de alivio y asombro mientras mueve las manos para atar. Contraste alto con grano sutil tipo c√°mara de acci√≥n."
              },
              {
                "id": "435b6cfb-6d4b-42e7-afd4-8f387698eec1",
                "name": "prompt5",
                "type": "string",
                "value": "Para la diapositiva 5 del carrusel (9:16), cierre sat√≠rico y dist√≥pico: Plano contrapicado del hombre caminando satisfecho hacia el horizonte, manos libres y tel√©fono a√∫n pegado al pecho. Texto superpuesto arriba en tipograf√≠a bold blanca con ligera sombra: ‚Äú¬øQui√©n necesita cerebro cuando tienes IA?‚Äù. Tonos cinematogr√°ficos ligeramente desaturados, flare de sol intenso detr√°s del sujeto, vibra de p√≥ster de pel√≠cula sat√≠rica."
              }
            ]
          }
        },
        "typeVersion": "3.4"
      },
      {
        "id": "7f8a8adc-94bc-443e-be33-d1ce1bf14d11",
        "name": "Set API Variables",
        "type": "n8n-nodes-base.set",
        "position": [
          320,
          2760
        ],
        "parameters": {
          "options": {},
          "assignments": {
            "assignments": [
              {
                "id": "2a5d52c2-5af1-4796-acba-4e1807fc7d7b",
                "name": "image_prompt",
                "type": "string",
                "value": "{{ $json }}"
              },
              {
                "id": "c41a8091-d952-4f5a-ae24-3b0691bbce57",
                "name": "number_of_images",
                "type": "number",
                "value": 1
              },
              {
                "id": "1b359a11-c05a-49c8-aa27-402b145fcbc1",
                "name": "size_of_image",
                "type": "string",
                "value": "1024x1536"
              },
              {
                "id": "6cf4ba85-d11a-48bb-9eaf-4084c9538d87",
                "name": "openai_image_model",
                "type": "string",
                "value": "gpt-image-1"
              },
              {
                "id": "7df8ba96-e22b-49cc-bf0f-5195d360aef8",
                "name": "response_format_image",
                "type": "string",
                "value": "b64_json"
              }
            ]
          }
        },
        "typeVersion": 3.4
      },
      {
        "id": "e2edf20b-4dd7-458c-9582-043a78d2ac5a",
        "name": "OpenAI - Generate Image 1",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          520,
          2320
        ],
        "parameters": {
          "url": "https://api.openai.com/v1/images/generations",
          "method": "POST",
          "options": {},
          "jsonBody": "={\n  \"model\": \"{{ $json.openai_image_model }}\",\n  \"prompt\": \"{{ $('Set All Prompts').item.json.prompt1 }}\",\n  \"n\": {{ $json.number_of_images }},\n  \"size\": \"{{ $json.size_of_image }}\"\n}",
          "sendBody": true,
          "sendHeaders": true,
          "specifyBody": "json",
          "authentication": "predefinedCredentialType",
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "nodeCredentialType": "openAiApi"
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "004cb6dc-eead-44a1-8308-9d61fe8afece",
        "name": "Separate Image Outputs 1",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          740,
          2320
        ],
        "parameters": {
          "options": {},
          "fieldToSplitOut": "data"
        },
        "typeVersion": 1
      },
      {
        "id": "5f330301-a8ca-45df-904b-0f8911e2ceee",
        "name": "Convert to File 1",
        "type": "n8n-nodes-base.convertToFile",
        "position": [
          960,
          2320
        ],
        "parameters": {
          "options": {},
          "operation": "toBinary",
          "sourceProperty": "b64_json"
        },
        "typeVersion": 1.1
      },
      {
        "id": "fef53966-0baf-4645-95ae-50db7ef7f469",
        "name": "Change name to photo1",
        "type": "n8n-nodes-base.code",
        "position": [
          1160,
          2320
        ],
        "parameters": {
          "jsCode": "return items.map((item, index) => {\n  // Grab the existing binary buffer under \"data\"\n  const buffer = item.binary.data;\n  // Build a new item with the renamed binary key\n  return {\n    json: item.json,\n    binary: {\n      // Rename to photo1, photo2, ...\n      [`photo${index + 1}`]: buffer\n    }\n  };\n});\n"
        },
        "typeVersion": 2
      },
      {
        "id": "9b9b5381-4176-4c86-ac9d-ca7ec907a5c5",
        "name": "OpenAI - Generate Image 2",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          520,
          2520
        ],
        "parameters": {
          "url": "https://api.openai.com/v1/images/edits",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "authentication": "predefinedCredentialType",
          "bodyParameters": {
            "parameters": [
              {
                "name": "model",
                "value": "={{ $('Set API Variables').item.json.openai_image_model }}"
              },
              {
                "name": "prompt",
                "value": "={{ $('Set All Prompts').item.json.prompt2 }}"
              },
              {
                "name": "n",
                "value": "={{ $('Set API Variables').item.json.number_of_images }}"
              },
              {
                "name": "size",
                "value": "={{ $('Set API Variables').item.json.size_of_image }}"
              },
              {
                "name": "image[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo1"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "nodeCredentialType": "openAiApi"
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "a44ca7d3-2eef-4b4a-a135-c9f71454ebf9",
        "name": "Separate Image Outputs 2",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          760,
          2520
        ],
        "parameters": {
          "options": {},
          "fieldToSplitOut": "data"
        },
        "typeVersion": 1
      },
      {
        "id": "44f8a29d-3283-49e3-b911-54f2ce16bcf5",
        "name": "Convert to File 2",
        "type": "n8n-nodes-base.convertToFile",
        "position": [
          1000,
          2520
        ],
        "parameters": {
          "options": {},
          "operation": "toBinary",
          "sourceProperty": "b64_json"
        },
        "typeVersion": 1.1
      },
      {
        "id": "8dbc8095-9bd6-43cf-b8ea-1dd8966866dc",
        "name": "Change name to photo2",
        "type": "n8n-nodes-base.code",
        "position": [
          1200,
          2520
        ],
        "parameters": {
          "jsCode": "return items.map((item, index) => {\n  // Grab the existing binary buffer under \"data\"\n  const buffer = item.binary.data;\n  // Build a new item with the renamed binary key\n  return {\n    json: item.json,\n    binary: {\n      // Rename to photo1, photo2, ...\n      [`photo${index + 2}`]: buffer\n    }\n  };\n});\n"
        },
        "typeVersion": 2
      },
      {
        "id": "3fb24ebf-117e-4c98-90f0-69a870cd3c2c",
        "name": "OpenAI - Generate Image 3",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          520,
          2740
        ],
        "parameters": {
          "url": "https://api.openai.com/v1/images/edits",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "authentication": "predefinedCredentialType",
          "bodyParameters": {
            "parameters": [
              {
                "name": "model",
                "value": "={{ $('Set API Variables').item.json.openai_image_model }}"
              },
              {
                "name": "prompt",
                "value": "={{ $('Set All Prompts').item.json.prompt3 }}"
              },
              {
                "name": "n",
                "value": "={{ $('Set API Variables').item.json.number_of_images }}"
              },
              {
                "name": "size",
                "value": "={{ $('Set API Variables').item.json.size_of_image }}"
              },
              {
                "name": "image[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo2"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "nodeCredentialType": "openAiApi"
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "bd7b0ab1-adde-47a0-b84f-f2ecf214ccff",
        "name": "Separate Image Outputs 3",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          760,
          2740
        ],
        "parameters": {
          "options": {},
          "fieldToSplitOut": "data"
        },
        "typeVersion": 1
      },
      {
        "id": "3cccc067-f913-4bb8-996d-ceccf4e0bfcb",
        "name": "Convert to File 3",
        "type": "n8n-nodes-base.convertToFile",
        "position": [
          1000,
          2740
        ],
        "parameters": {
          "options": {},
          "operation": "toBinary",
          "sourceProperty": "b64_json"
        },
        "typeVersion": 1.1
      },
      {
        "id": "5619cabd-8a3a-4f98-b79e-f4e8aadacf33",
        "name": "Change name to photo3",
        "type": "n8n-nodes-base.code",
        "position": [
          1200,
          2740
        ],
        "parameters": {
          "jsCode": "return items.map((item, index) => {\n  // Grab the existing binary buffer under \"data\"\n  const buffer = item.binary.data;\n  // Build a new item with the renamed binary key\n  return {\n    json: item.json,\n    binary: {\n      // Rename to photo1, photo2, ...\n      [`photo${index + 3}`]: buffer\n    }\n  };\n});\n"
        },
        "typeVersion": 2
      },
      {
        "id": "743db045-9cce-41f2-b902-fcbdcc9cd306",
        "name": "OpenAI - Generate Image 4",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          520,
          2980
        ],
        "parameters": {
          "url": "https://api.openai.com/v1/images/edits",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "authentication": "predefinedCredentialType",
          "bodyParameters": {
            "parameters": [
              {
                "name": "model",
                "value": "={{ $('Set API Variables').item.json.openai_image_model }}"
              },
              {
                "name": "prompt",
                "value": "={{ $('Set All Prompts').item.json.prompt4 }}"
              },
              {
                "name": "n",
                "value": "={{ $('Set API Variables').item.json.number_of_images }}"
              },
              {
                "name": "size",
                "value": "={{ $('Set API Variables').item.json.size_of_image }}"
              },
              {
                "name": "image[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo3"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "nodeCredentialType": "openAiApi"
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "19997fd7-9deb-416a-8544-2c13fc4f9900",
        "name": "Separate Image Outputs 4",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          760,
          2980
        ],
        "parameters": {
          "options": {},
          "fieldToSplitOut": "data"
        },
        "typeVersion": 1
      },
      {
        "id": "9b521796-80c3-49e5-bf6c-83721783ab4c",
        "name": "Convert to File 4",
        "type": "n8n-nodes-base.convertToFile",
        "position": [
          1000,
          2980
        ],
        "parameters": {
          "options": {},
          "operation": "toBinary",
          "sourceProperty": "b64_json"
        },
        "typeVersion": 1.1
      },
      {
        "id": "f931e230-1a41-4608-933b-441955160097",
        "name": "Change name to photo4",
        "type": "n8n-nodes-base.code",
        "position": [
          1200,
          2980
        ],
        "parameters": {
          "jsCode": "return items.map((item, index) => {\n  // Grab the existing binary buffer under \"data\"\n  const buffer = item.binary.data;\n  // Build a new item with the renamed binary key\n  return {\n    json: item.json,\n    binary: {\n      // Rename to photo1, photo2, ...\n      [`photo${index + 4}`]: buffer\n    }\n  };\n});\n"
        },
        "typeVersion": 2
      },
      {
        "id": "fa3c014c-1143-4975-8eab-26ce302d2312",
        "name": "OpenAI - Generate Image 5",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          520,
          3240
        ],
        "parameters": {
          "url": "https://api.openai.com/v1/images/edits",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "authentication": "predefinedCredentialType",
          "bodyParameters": {
            "parameters": [
              {
                "name": "model",
                "value": "={{ $('Set API Variables').item.json.openai_image_model }}"
              },
              {
                "name": "prompt",
                "value": "={{ $('Set All Prompts').item.json.prompt5 }}"
              },
              {
                "name": "n",
                "value": "={{ $('Set API Variables').item.json.number_of_images }}"
              },
              {
                "name": "size",
                "value": "={{ $('Set API Variables').item.json.size_of_image }}"
              },
              {
                "name": "image[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo4"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          },
          "nodeCredentialType": "openAiApi"
        },
        "credentials": {
          "openAiApi": {
            "id": "XJdxgMSXFgwReSsh",
            "name": "n8n key"
          }
        },
        "typeVersion": 4.2
      },
      {
        "id": "72fb090f-b6a5-432a-b45a-f52835cd63b2",
        "name": "Separate Image Outputs 5",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          760,
          3240
        ],
        "parameters": {
          "options": {},
          "fieldToSplitOut": "data"
        },
        "typeVersion": 1
      },
      {
        "id": "ed5689d2-68fe-4284-a46b-21b9ba3430b7",
        "name": "Convert to File 5",
        "type": "n8n-nodes-base.convertToFile",
        "position": [
          1000,
          3240
        ],
        "parameters": {
          "options": {},
          "operation": "toBinary",
          "sourceProperty": "b64_json"
        },
        "typeVersion": 1.1
      },
      {
        "id": "596b16da-ef12-4972-a894-d99a8d827cef",
        "name": "Change name to photo5",
        "type": "n8n-nodes-base.code",
        "position": [
          1200,
          3240
        ],
        "parameters": {
          "jsCode": "return items.map((item, index) => {\n  // Grab the existing binary buffer under \"data\"\n  const buffer = item.binary.data;\n  // Build a new item with the renamed binary key\n  return {\n    json: item.json,\n    binary: {\n      // Rename to photo1, photo2, ...\n      [`photo${index + 5}`]: buffer\n    }\n  };\n});\n"
        },
        "typeVersion": 2
      },
      {
        "id": "2a814cfa-524c-433a-bdd3-36cf63570074",
        "name": "POST TO TIKTOK",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          2200,
          2860
        ],
        "parameters": {
          "url": "https://api.upload-post.com/api/upload_photos",
          "method": "POST",
          "options": {},
          "sendBody": true,
          "contentType": "multipart-form-data",
          "sendHeaders": true,
          "bodyParameters": {
            "parameters": [
              {
                "name": "title",
                "value": "={{\n\t(cp => cp.length > 90\n\t\t? cp.slice(0, 87).join('') + '‚Ä¶'   // 87 + ‚Äú‚Ä¶‚Äù = 90\n\t\t: cp.join('')\n\t)([...$('Generate Description for Tiktok and Instagram')\n\t\t.first()\n\t\t.json\n\t\t.message\n\t\t.content])\n}}"
              },
              {
                "name": "user",
                "value": "upload_post"
              },
              {
                "name": "platform[]",
                "value": "tiktok"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "=photo1"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo2"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo3"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo4"
              },
              {
                "name": "photos[]",
                "parameterType": "formBinaryData",
                "inputDataFieldName": "photo5"
              },
              {
                "name": "auto_add_music",
                "value": "true"
              }
            ]
          },
          "headerParameters": {
            "parameters": [
              {
                "name": "Authorization",
                "value": "Apikey add_api_key_here"
              }
            ]
          }
        },
        "typeVersion": 4.2
      }
    ],
    "active": false,
    "pinData": {},
    "settings": {
      "executionOrder": "v1"
    },
    "versionId": "755c3c50-9474-4201-9ab6-0aac79ab6a5b",
    "connections": {
      "Merge": {
        "main": [
          [
            {
              "node": "Send as 1 merged file",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set All Prompts": {
        "main": [
          [
            {
              "node": "Generate Description for Tiktok and Instagram",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File 1": {
        "main": [
          [
            {
              "node": "Change name to photo1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File 2": {
        "main": [
          [
            {
              "node": "Change name to photo2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File 3": {
        "main": [
          [
            {
              "node": "Change name to photo3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File 4": {
        "main": [
          [
            {
              "node": "Change name to photo4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Convert to File 5": {
        "main": [
          [
            {
              "node": "Change name to photo5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Set API Variables": {
        "main": [
          [
            {
              "node": "OpenAI - Generate Image 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Change name to photo1": {
        "main": [
          [
            {
              "node": "OpenAI - Generate Image 2",
              "type": "main",
              "index": 0
            },
            {
              "node": "Merge",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Change name to photo2": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 1
            },
            {
              "node": "OpenAI - Generate Image 3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Change name to photo3": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 2
            },
            {
              "node": "OpenAI - Generate Image 4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Change name to photo4": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 3
            },
            {
              "node": "OpenAI - Generate Image 5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Change name to photo5": {
        "main": [
          [
            {
              "node": "Merge",
              "type": "main",
              "index": 4
            }
          ]
        ]
      },
      "Send as 1 merged file": {
        "main": [
          [
            {
              "node": "POST TO INSTAGRAM",
              "type": "main",
              "index": 0
            },
            {
              "node": "POST TO TIKTOK",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Separate Image Outputs 1": {
        "main": [
          [
            {
              "node": "Convert to File 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Separate Image Outputs 2": {
        "main": [
          [
            {
              "node": "Convert to File 2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Separate Image Outputs 3": {
        "main": [
          [
            {
              "node": "Convert to File 3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Separate Image Outputs 4": {
        "main": [
          [
            {
              "node": "Convert to File 4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Separate Image Outputs 5": {
        "main": [
          [
            {
              "node": "Convert to File 5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI - Generate Image 1": {
        "main": [
          [
            {
              "node": "Separate Image Outputs 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI - Generate Image 2": {
        "main": [
          [
            {
              "node": "Separate Image Outputs 2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI - Generate Image 3": {
        "main": [
          [
            {
              "node": "Separate Image Outputs 3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI - Generate Image 4": {
        "main": [
          [
            {
              "node": "Separate Image Outputs 4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "OpenAI - Generate Image 5": {
        "main": [
          [
            {
              "node": "Separate Image Outputs 5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When clicking ‚ÄòTest workflow‚Äô": {
        "main": [
          [
            {
              "node": "Set All Prompts",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Generate Description for Tiktok and Instagram": {
        "main": [
          [
            {
              "node": "Set API Variables",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    }
  }
}