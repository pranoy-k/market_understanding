{
  "id": "",
  "meta": {
    "instanceId": "",
    "templateCredsSetupCompleted": false
  },
  "name": "üé¨ Instantly Turn Ideas into Viral Instagram Reel Scenarios ü§ñ (Telegram, AI Agent)",
  "tags": [],
  "nodes": [
    {
      "name": "Start: Receive Message on Telegram",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        320,
        -80
      ],
      "webhookId": "",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "",
          "name": "Telegram Bot Credentials"
        }
      },
      "typeVersion": 1.1
    },
    {
      "name": "AI Model: GPT-4o",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1180,
        40
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": "OpenAI API Credentials"
        }
      },
      "typeVersion": 1.2
    },
    {
      "name": "Memory for Chat Context",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1340,
        40
      ],
      "parameters": {
        "sessionKey": "={{ $('Start: Receive Message on Telegram').item.json.message.chat.id }}",
        "sessionIdType": "customKey",
        "contextWindowLength": 10
      },
      "typeVersion": 1.3
    },
    {
      "name": "Optional: Log Ideas to Google Sheets",
      "type": "n8n-nodes-base.googleSheetsTool",
      "disabled": true,
      "position": [
        1500,
        40
      ],
      "parameters": {
        "columns": {
          "value": {
            "Date": "={{ $now.toFormat(\"dd-MM-yyyy HH:mm\") }}",
            "Script": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('______', `Scenario Reels`, 'string') }}",
            "Status": "Note",
            "Description": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('________', `Description Reels`, 'string') }}"
          },
          "schema": [
            {
              "id": "Script",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Script",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Description",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Description",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Status",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "documentId": {
          "__rl": true,
          "mode": "id",
          "value": ""
        }
      },
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "",
          "name": "Google Sheets Credentials"
        }
      },
      "typeVersion": 4.5
    },
    {
      "name": "Set Error Message",
      "type": "n8n-nodes-base.set",
      "position": [
        760,
        120
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "name": "Error",
              "type": "string",
              "value": "An error has occurred"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "name": "Generate Reels Scenario with AI",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1232,
        -180
      ],
      "parameters": {
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=You are a marketing expert with 25 years of experience.\nYou studied under the best U.S. marketers and copywriters‚ÄîRussell Brunson, Dan Kennedy, Gary Halbert, Alex Hormozi, Todd Brown, and others.\n\nYou also master viral Instagram Reels that rack up millions of views.\nYou know exactly how to grab and hold attention using top-tier marketing and psychology methods.\nYou command emotional storytelling and leverage psychological influence principles, blending brilliant techniques from legends such as Gary Bencivenga, Joe Sugarman, Dan Kennedy, Chris Haddad, John Carlton, David Ogilvy, Seth Godin, and more.\n\nWork at full power‚Äîit's extremely important to me to get the best possible result.\n\nYou write hooks no one can scroll past.\n\nWrite in simple, lively language‚Äîas if speaking straight into the camera.\nAvoid complicated wording, \"info-style\" delivery, and templates.\nShort sentences, spoken tone, no \"As an expert, I think‚Ä¶,\" no fluff.\nImagine the person records this Reel in one take‚Äîemotional, with rhythm, pauses, energy.\n\nBelow you'll find the idea for the Reel (transcript of the user's voice note):\n\n\"{text}\"\n\nBased on this, create:\n\t1.\tA Reel script (30‚Äì60 seconds) in the format:\n‚Ä¢ HOOK ‚Äî eye-catching first line\n‚Ä¢ SUBTITLE ‚Äî amplifies curiosity & value promise\n‚Ä¢ BODY ‚Äî explanation / story / argument / core message\n‚Ä¢ CTA ‚Äî light, non-generic call to action\n\t2.\tThree hook variants‚Äîno clich√©s, no emojis, but designed to stand out in the timeline\n\t3.\tA short Reel caption (1‚Äì2 lines)‚Äîto appear under the Reel\n\n‚ùó Important: The viewer has already watched the Reel and is now reading the caption.\nYour job: keep their attention, trigger an \"aha\" moment, or spark the desire to save/share.\n\nThe caption should\n‚Äì be easy to understand\n‚Äì avoid repeating lines from the video\n‚Äì strengthen the Reel's core message\n‚Äì motivate an internal reaction or action\n\nExample openings:\n‚Äî \"And here's what almost every expert overlooks‚Ä¶\"\n‚Äî \"Don't forget this before your next Reel post\"\n‚Äî \"Ever experienced this too?\"\n\n‚ùå Avoid clich√©s like \"Hey guys,\" \"Watch until the end,\" \"Subscribe to my channel.\"\n\nüì∏ Additional task ‚Äì VISUAL IDEA for the Reel\nBased on the content, tone, and mood, give 1‚Äì2 concrete recommendations for suitable footage or imagery.\nThe visual idea should support the hook, amplify the emotion, and captivate the viewer within the first 2 seconds.\n\nNo generic suggestions like \"just show yourself on camera.\" Think concrete and cinematic:\n‚Äì Exactly what should be visible?\n‚Äì What happens in the background?\n‚Äì How's the lighting / mood?\n‚Äì Any visual metaphor or strong movement?\n\nExamples:\n‚Äî \"Dark room, only the face in focus, emotional close-up, camera slowly moving toward the person\"\n‚Äî \"Cut between old Insta posts and the person staring seriously into the lens‚Äîthen switch to a smiling face\"\n‚Äî \"Smartphone angrily tossed aside, then close-up of a calm, confident face delivering the message\"\n\nüì¶ Return the result in this format:\n\n‚∏ª\n\nüí° Hook (variants):\n\t1.\t‚Ä¶\n\t2.\t‚Ä¶\n\t3.\t‚Ä¶\n\nüé¨ Script:\n‚Ä¢ Hook: ‚Ä¶\n‚Ä¢ Subtitle: ‚Ä¶\n‚Ä¢ Body: ‚Ä¶\n‚Ä¢ CTA: ‚Ä¶\n\nüìù Reel Caption:\n‚Ä¶\n\nüì∏ Visual Idea:\n‚Ä¶"
        },
        "promptType": "define"
      },
      "typeVersion": 1.8
    },
    {
      "name": "Send Scenario to Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1640,
        -180
      ],
      "webhookId": "",
      "parameters": {
        "text": "={{ $json.output }}",
        "chatId": "={{ $('Start: Receive Message on Telegram').item.json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "",
          "name": "Telegram Bot Credentials"
        }
      },
      "typeVersion": 1.2
    },
    {
      "name": "Route by Input Type",
      "type": "n8n-nodes-base.switch",
      "position": [
        540,
        -80
      ],
      "parameters": {
        "rules": {
          "values": [
            {
              "outputKey": "Audio",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "Text",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text || \"\" }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            },
            {
              "outputKey": "Error",
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "error",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true
            }
          ]
        },
        "options": {}
      },
      "typeVersion": 3.2
    },
    {
      "name": "Set User Input",
      "type": "n8n-nodes-base.set",
      "position": [
        980,
        -80
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "name": "text",
              "type": "string",
              "value": "={{ $json.message.text }}"
            }
          ]
        }
      },
      "typeVersion": 3.4
    },
    {
      "name": "Send Error Message to Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        980,
        120
      ],
      "webhookId": "",
      "parameters": {
        "text": "={{ $json.output }}",
        "chatId": "={{ $('Start: Receive Message on Telegram').item.json.message.chat.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "credentials": {
        "telegramApi": {
          "id": "",
          "name": "Telegram Bot Credentials"
        }
      },
      "typeVersion": 1.2
    },
    {
      "name": "Get Voice Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        760,
        -280
      ],
      "webhookId": "",
      "parameters": {
        "fileId": "={{ $json.message.voice.file_id }}",
        "resource": "file"
      },
      "credentials": {
        "telegramApi": {
          "id": "",
          "name": "Telegram Bot Credentials"
        }
      },
      "typeVersion": 1.2
    },
    {
      "name": "Transcribe Voice to Text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        980,
        -280
      ],
      "parameters": {
        "options": {},
        "resource": "audio",
        "operation": "transcribe"
      },
      "credentials": {
        "openAiApi": {
          "id": "",
          "name": "OpenAI API Credentials"
        }
      },
      "typeVersion": 1.8
    },
    {
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        100,
        -540
      ],
      "parameters": {
        "width": 540,
        "height": 420,
        "content": "## üöÄ Quick Start Guide\n\n1. üîê Connect Your Accounts:\n\t‚Ä¢\tü§ñ Telegram: Link your Start & Send nodes to your bot (Use https://telegram.me/BotFather to create a new bot)\n\t‚Ä¢\tüß† OpenAI: Paste your API key in GPT-4o & Transcribe Audio nodes\n\t‚Ä¢\tüìä Google Sheets (Optional): To log ideas, connect your account and pick your spreadsheet, otherwise leave deactivated\n\n2. ‚úÖ Activate Workflow:\nClick \"Activate\" (top-right)\n\n3. üí¨ Send Your Idea:\nText or voice message your Reel idea to your Telegram bot\n\n4. üé¨ Get Your Scenario:\nReceive a ready-to-use Reel plan:\nHook ‚ú® Script ‚úçÔ∏è Caption üìù Visual Idea üé®"
      },
      "typeVersion": 1
    },
    {
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1640,
        40
      ],
      "parameters": {
        "height": 120,
        "content": "## Optional:\nüí¨ Ask your bot to store the generated scenario in your google sheet*"
      },
      "typeVersion": 1
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "",
  "connections": {
    "Set User Input": {
      "main": [
        [
          {
            "node": "Generate Reels Scenario with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Model: GPT-4o": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Reels Scenario with AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Voice Message": {
      "main": [
        [
          {
            "node": "Transcribe Voice to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Error Message": {
      "main": [
        [
          {
            "node": "Send Error Message to Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Input Type": {
      "main": [
        [
          {
            "node": "Get Voice Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set User Input",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memory for Chat Context": {
      "ai_memory": [
        [
          {
            "node": "Generate Reels Scenario with AI",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Voice to Text": {
      "main": [
        [
          {
            "node": "Generate Reels Scenario with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Reels Scenario with AI": {
      "main": [
        [
          {
            "node": "Send Scenario to Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start: Receive Message on Telegram": {
      "main": [
        [
          {
            "node": "Route by Input Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Optional: Log Ideas to Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "Generate Reels Scenario with AI",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  }
}